// Generated by CoffeeScript 1.10.0
var AdminView,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

AdminView = (function(superClass) {
  extend(AdminView, superClass);

  function AdminView() {
    this.render = bind(this.render, this);
    return AdminView.__super__.constructor.apply(this, arguments);
  }

  AdminView.prototype.className = "AdminView";

  AdminView.prototype.events = {
    "click .update ": "update"
  };

  AdminView.prototype.update = function(event) {
    var $target, group;
    $target = $(event.target);
    group = $target.attr("data-group");
    return Utils.updateTangerine(null, {
      targetDB: group
    });
  };

  AdminView.prototype.getVersionNumber = function(group) {
    return $.ajax("/" + group + "/_design/" + Tangerine.design_doc + "/js/version.js", {
      dataType: "text",
      success: (function(_this) {
        return function(result) {
          console.log(result);
          return _this.$el.find("#" + group + "-version").html(result.match(/"(.*)"/)[1]);
        };
      })(this)
    });
  };

  AdminView.prototype.initialize = function(options) {
    return this.groups = options.groups;
  };

  AdminView.prototype.render = function() {
    var group, sortTable;
    sortTable = _.after(this.groups.length, function() {
      return $("table#active-groups").tablesorter({
        widgets: ['zebra'],
        sortList: [[5, 1]]
      });
    });
    this.$el.html("<h2>Group Activity</h2> <table id='active-groups' class='class_table'> <thead> " + (_(["Name", "Last Complete Result", "Total Assessments", "Total Results", "Version", "Last Result"]).map(function(header) {
      return "<th>" + header + "</th>";
    }).join("")) + " </thead> <tbody> " + (((function() {
      var i, len, ref, results;
      ref = this.groups;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        group = ref[i];
        results.push("<tr id='" + group + "'> <td> " + group + "<br> </td> <td class='last-result'>...</td> <td class='total-assessments'>...</td> <td class='total-results'>...</td> <td class='version'><div>...</div><button class='update command' data-group='" + group + "'>Update</button></td> <td class='last-timestamp'>...</td> </tr>");
      }
      return results;
    }).call(this)).join('')) + " </tbody> </table>");
    $("table#active-groups").tablesorter({
      widgets: ['zebra'],
      sortList: [[5, 1]]
    });
    _(this.groups).each((function(_this) {
      return function(group) {
        var $group;
        $group = _this.$el.find("#" + group);
        return $.ajax("/" + group + "/_design/" + Tangerine.design_doc + "/js/version.js", {
          dataType: "text",
          success: function(result) {
            $group.find(".version div").html(result.match(/"(.*)"/)[1]);
            return $.couch.db(group).view(Tangerine.design_doc + "/resultCount", {
              group: true,
              success: (function(_this) {
                return function(resultCounts) {
                  var groupTotalResults, resultCount;
                  $group.find(".total-assessments").html(resultCounts.rows.length);
                  groupTotalResults = 0;
                  while ((resultCount = resultCounts.rows.pop())) {
                    groupTotalResults += parseInt(resultCount.value);
                  }
                  $group.find(".total-results").html("<button class='results navigation'><a href='/" + group + "/_design/" + Tangerine.design_doc + "/index.html#dashboard'>" + groupTotalResults + "</a></button>");
                  return ($.couch.db(group).view(Tangerine.design_doc + "/completedResultsByEndTime", {
                    limit: 1,
                    descending: true,
                    success: function(result) {
                      if (result.rows[0] && result.rows[0].key) {
                        $group.find(".last-timestamp").html(moment(new Date(result.rows[0].key)).format("YYYY-MMM-DD HH:mm"));
                        return $group.find(".last-result").html(moment(result.rows[0].key).fromNow());
                      }
                    },
                    error: function() {
                      return console.log("Could not retrieve view 'completedResultsByEndTime' for " + group);
                    }
                  })).complete(function() {
                    return sortTable();
                  });
                };
              })(this)
            });
          }
        });
      };
    })(this));
    return this.trigger("rendered");
  };

  return AdminView;

})(Backbone.View);
