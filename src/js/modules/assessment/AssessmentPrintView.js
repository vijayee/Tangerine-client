// Generated by CoffeeScript 1.10.0
var AssessmentPrintView,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

AssessmentPrintView = (function(superClass) {
  extend(AssessmentPrintView, superClass);

  function AssessmentPrintView() {
    this.afterRender = bind(this.afterRender, this);
    return AssessmentPrintView.__super__.constructor.apply(this, arguments);
  }

  AssessmentPrintView.prototype.className = "AssessmentPrintView";

  AssessmentPrintView.prototype.initialize = function(options) {
    this.abortAssessment = false;
    this.index = 0;
    this.model = options.model;
    this.format = options.format;
    Tangerine.activity = "assessment print";
    this.subtestViews = [];
    this.model.subtests.sort();
    return this.model.subtests.each((function(_this) {
      return function(subtest) {
        var subtestView;
        subtestView = new SubtestPrintView({
          model: subtest,
          parent: _this,
          format: _this.format
        });
        subtestView.on("rendered", function(view) {
          return view != null ? typeof view.afterRender === "function" ? view.afterRender() : void 0 : void 0;
        });
        return _this.subtestViews.push(subtestView);
      };
    })(this));
  };

  AssessmentPrintView.prototype.render = function() {
    if (this.model.subtests.length === 0) {
      this.$el.append("<h1>Oops...</h1><p>This assessment is blank. Perhaps you meant to add some subtests.</p>");
    } else {
      this.$el.addClass("format-" + this.format).append("<style> @page :right { @bottom-right-corner { content: counter(page) \" of \" counter(pages); }} table.print-metadata td{ border: solid black 1px; } table.print-content.question-attributes{ margin: 10px; } table.print-content.question-options{ margin-bottom: 5px; } table.print-content{ border: solid black 1px; } table.print-content td{ border: solid black 1px; } .AssessmentPrintView #prototype_wrapper .print-page.content { height: auto; } </style> <div class='print-page " + this.format + "'> <h2>" + (this.model.get("name").titleize()) + "</h2> <h3> " + (this.model.has("updated") ? "Last Updated: " + (moment(this.model.get("updated"))) : "") + " </h3> <table class='marking-table'> <tr> <td style='vertical-align:middle'>Enumerator Name</td><td class='marking-area'></td> </tr> </table> </div> <hr/>");
      _.each(this.subtestViews, (function(_this) {
        return function(subtestView) {
          subtestView.render();
          return _this.$el.append(subtestView.el);
        };
      })(this));
    }
    return this.trigger("rendered");
  };

  AssessmentPrintView.prototype.afterRender = function() {
    return _.delay(function() {
      $('#navigation').hide();
      return $('#footer').hide();
    }, 1000);
  };

  return AssessmentPrintView;

})(Backbone.View);
