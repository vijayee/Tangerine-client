// Generated by CoffeeScript 1.10.0
var KlassListElementView,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

KlassListElementView = (function(superClass) {
  extend(KlassListElementView, superClass);

  function KlassListElementView() {
    this.render = bind(this.render, this);
    return KlassListElementView.__super__.constructor.apply(this, arguments);
  }

  KlassListElementView.prototype.className = "KlassListElementView";

  KlassListElementView.prototype.tagName = "li";

  KlassListElementView.prototype.events = {
    'click .klass_run': 'run',
    'click .klass_results': 'showReportSelect',
    'change #report': 'getReportMenu',
    'click .cancel_report': 'cancelReport',
    'click .klass_edit': 'edit',
    'click .klass_delete': 'toggleDelete',
    'click .klass_delete_cancel': 'toggleDelete',
    'click .klass_delete_delete': 'delete'
  };

  KlassListElementView.prototype.initialize = function(options) {
    this.availableReports = Tangerine.config.get("reports");
    if (options.klass.has("curriculumId")) {
      this.curriculum = new Curriculum({
        "_id": options.klass.get("curriculumId" || "")
      });
      return this.curriculum.fetch({
        success: this.render
      });
    } else {
      return this.curriculum = new Curriculum;
    }
  };

  KlassListElementView.prototype.edit = function() {
    return Tangerine.router.navigate("class/edit/" + this.options.klass.id, true);
  };

  KlassListElementView.prototype.getReportMenu = function(event) {
    var ref;
    if ((ref = this.subMenuView) != null) {
      ref.close();
    }
    this.subMenuView = new window[$(event.target).find(":selected").attr("data-menu_view")]({
      parent: this
    });
    this.$el.find("#report_menu_container").append("<div class='report_menu'></div>");
    this.subMenuView.setElement(this.$el.find("#report_menu_container .report_menu"));
    return this.subMenuView.render();
  };

  KlassListElementView.prototype.showReportSelect = function() {
    return this.$el.find(".report_select_container").removeClass("confirmation");
  };

  KlassListElementView.prototype.cancelReport = function() {
    var ref;
    this.$el.find('div#report_menu').empty();
    this.$el.find('#report :nth-child(1)').attr('selected', 'selected');
    this.$el.find(".report_select_container").addClass("confirmation");
    return (ref = this.subMenuView) != null ? ref.close() : void 0;
  };

  KlassListElementView.prototype.onClose = function() {
    var ref;
    return (ref = this.subMenuView) != null ? ref.close() : void 0;
  };

  KlassListElementView.prototype.run = function() {
    return Tangerine.router.navigate("class/" + this.options.klass.id, true);
  };

  KlassListElementView.prototype.toggleDelete = function() {
    return this.$el.find(".klass_delete_confirm").toggle();
  };

  KlassListElementView.prototype["delete"] = function() {
    return this.options.klass.collection.get(this.options.klass).destroy();
  };

  KlassListElementView.prototype.render = function() {
    var htmlTeacher, i, klass, len, menuOptions, ref, report, teacher, teacherName;
    klass = this.options.klass;
    if (klass.get("teacherId") === "admin") {
      teacherName = "admin";
    } else {
      teacher = vm.currentView.teachers.get(klass.get("teacherId"));
      teacherName = (teacher != null ? teacher.getEscapedString('name') : void 0) || "";
    }
    if (Tangerine.user.isAdmin()) {
      htmlTeacher = "<tr><th>Teacher</th><td>" + teacherName + "</td></tr>";
    }
    menuOptions = "";
    ref = this.availableReports;
    for (i = 0, len = ref.length; i < len; i++) {
      report = ref[i];
      if ((report.context == null) || report.context === Tangerine.settings.get('context')) {
        menuOptions += "<option data-menu_view='" + report.menuView + "'>" + (t(report.name)) + "</option>";
      }
    }
    this.$el.html("<table> " + (htmlTeacher || "") + " <tr><th>School name</th><td>" + (klass.getEscapedString('schoolName')) + "</td></tr> <tr><th>School year</th><td>" + (klass.getString('year')) + "</td></tr> <tr><th>" + (t('grade')) + "</th><td>" + (klass.getString('grade')) + "</td></tr> <tr><th>" + (t('stream')) + "</th><td>" + (klass.getString('stream')) + "</td></tr> <tr><th>" + (t('curriculum')) + "</th><td>" + (this.curriculum.getEscapedString('name')) + "</td></tr> </table> <img src='images/icon_run.png'     class='icon klass_run'> <img src='images/icon_results.png' class='icon klass_results'> <img src='images/icon_edit.png'    class='icon klass_edit'> <img src='images/icon_delete.png'  class='icon klass_delete'> <div class='report_select_container confirmation'> <div class='menu_box'> <select id='report'> <option selected='selected' disabled='disabled'>" + (t('select report type')) + "</option> " + menuOptions + " </select> </div> <div id='report_menu_container'></div> <button class='command cancel_report'>" + (t('cancel')) + "</button> </div> <div class='klass_delete_confirm confirmation'> <div class='menu_box'> " + (t('confirm')) + "<br> <button class='klass_delete_delete command_red'>" + (t('delete')) + "</button> <button class='klass_delete_cancel command'>" + (t('cancel')) + "</button> </div> </div>");
    return this.trigger("rendered");
  };

  return KlassListElementView;

})(Backbone.View);
