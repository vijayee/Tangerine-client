// Generated by CoffeeScript 1.10.0
var KlassView,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

KlassView = (function(superClass) {
  extend(KlassView, superClass);

  function KlassView() {
    return KlassView.__super__.constructor.apply(this, arguments);
  }

  KlassView.prototype.className = "KlassView";

  KlassView.prototype.initialize = function(options) {
    var allAssessments;
    this.klass = options.klass;
    this.assessments = this.klass.assessments;
    this.results = [];
    allAssessments = new KlassAssessments;
    return allAssessments.fetch({
      success: (function(_this) {
        return function(assessmentCollection) {
          var results;
          _this.assessments = assessmentCollection.where({
            klassId: _this.klass.id
          });
          results = new Results;
          return results.fetch({
            success: function(resultCollection) {
              var assessment, i, len, ref;
              ref = _this.assessments;
              for (i = 0, len = ref.length; i < len; i++) {
                assessment = ref[i];
                assessment.results = resultCollection.where({
                  assessmentId: assessment.id
                });
              }
              return _this.render();
            }
          });
        };
      })(this)
    });
  };

  KlassView.prototype.render = function() {
    var assessment, grade, html, i, len, ref, ref1, stream, year;
    year = this.klass.get("year") || "";
    grade = this.klass.get("grade") || "";
    stream = this.klass.get("stream") || "";
    html = "<h1>" + (t('class')) + " " + stream + "</h1> <table> <tr><td>School year</td><td>" + year + "</td></tr> <tr><td>" + (t('grade')) + "</td><tr>" + grade + "</td></tr> </table> </div> <ul class='assessment_list'>";
    ref = this.assessments;
    for (i = 0, len = ref.length; i < len; i++) {
      assessment = ref[i];
      html += "<li data-id='" + assessment.id + "'>" + (assessment.get('name')) + " - " + ((ref1 = assessment.get('results')) != null ? ref1.length : void 0) + "</li>";
    }
    html += "</ul>";
    this.$el.html(html);
    return this.trigger("rendered");
  };

  return KlassView;

})(Backbone.View);
