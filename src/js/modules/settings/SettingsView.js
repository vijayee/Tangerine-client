// Generated by CoffeeScript 1.10.0
var SettingsView,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

SettingsView = (function(superClass) {
  extend(SettingsView, superClass);

  function SettingsView() {
    return SettingsView.__super__.constructor.apply(this, arguments);
  }

  SettingsView.prototype.className = "SettingsView";

  SettingsView.prototype.events = {
    'click .save': 'save',
    'click .back': 'goBack'
  };

  SettingsView.prototype.goBack = function() {
    return window.history.back();
  };

  SettingsView.prototype.i18n = function() {
    return this.text = {
      save: t("Tangerine.actions.button.save"),
      back: t("Tangerine.navigation.button.back"),
      saved: t("Tangerine.message.saved"),
      saveError: t("Tangerine.message.save_error"),
      settings: t("SettingsView.label.settings"),
      warning: t("SettingsView.message.warning"),
      contextHelp: t("SettingsView.help.context"),
      languageHelp: t("SettingsView.help.language"),
      groupHandleHelp: t("SettingsView.help.group_handle"),
      groupNameHelp: t("SettingsView.help.group_name"),
      groupHostHelp: t("SettingsView.help.group_host"),
      uploadPasswordHelp: t("SettingsView.help.upload_password"),
      logEventsHelp: t("SettingsView.help.log_events"),
      context: t("SettingsView.label.context"),
      language: t("SettingsView.label.language"),
      groupHandle: t("SettingsView.label.group_handle"),
      groupName: t("SettingsView.label.group_name"),
      groupHost: t("SettingsView.label.group_host"),
      uploadPassword: t("SettingsView.label.upload_password"),
      logEvents: t("SettingsView.label.log_events")
    };
  };

  SettingsView.prototype.initialize = function(options) {
    this.i18n();
    return this.settings = Tangerine.settings;
  };

  SettingsView.prototype.save = function() {
    return this.settings.save({
      groupHandle: this.$el.find('#group_handle').val(),
      context: this.$el.find('#context').val(),
      language: this.$el.find('#language').val(),
      groupName: this.$el.find("#group_name").val(),
      groupHost: this.$el.find("#group_host").val(),
      upPass: this.$el.find("#up_pass").val(),
      log: this.$el.find("#log").val().split(/[\s,]+/)
    }, {
      success: (function(_this) {
        return function() {
          return Utils.midAlert(_this.text.saved);
        };
      })(this),
      error: function() {
        return Utils.midAlert(this.text.saveError);
      }
    });
  };

  SettingsView.prototype.render = function() {
    var context, groupHandle, groupHost, groupName, language, log, upPass;
    context = this.settings.getEscapedString("context");
    language = this.settings.getEscapedString("language");
    groupName = this.settings.getEscapedString("groupName");
    groupHandle = this.settings.getEscapedString("groupHandle");
    groupHost = this.settings.getEscapedString("groupHost");
    upPass = this.settings.getEscapedString("upPass");
    log = _.escape(this.settings.getArray("log").join(", "));
    this.$el.html("<button class='back navigation'>" + this.text.back + "</button> <h1>" + this.text.settings + "</h1> <p><img src='images/icon_warn.png' title='Warning'>" + this.text.warning + "</p> <div class='menu_box'> <div class='label_value'> <label for='context' title='" + this.text.contextHelp + "'>" + this.text.context + "</label><br> <input id='context' type='text' value='" + context + "'> </div> <div class='label_value'> <label for='language' title='" + this.text.languageHelp + "'>" + this.text.language + "</label><br> <input id='language' type='text' value='" + language + "'> </div> <div class='label_value'> <label for='group_handle' title='" + this.text.groupHandleHelp + "'>" + this.text.groupHandle + "</label><br> <input id='group_handle' type='text' value='" + groupHandle + "'> </div> <div class='label_value'> <label for='group_name' title='" + this.text.groupNameHelp + "'>" + this.text.groupName + "</label><br> <input id='group_name' type='text' value='" + groupName + "'> </div> <div class='label_value'> <label for='group_host' title='" + this.text.groupHostHelp + "'>" + this.text.groupHost + "</label><br> <input id='group_host' type='text' value='" + groupHost + "'> </div> <div class='label_value'> <label for='up_pass' title='" + this.text.uploadPasswordHelp + "'>" + this.text.uploadPassword + "</label><br> <input id='up_pass' type='text' value='" + upPass + "'> </div> <div class='label_value'> <label for='log' title='" + this.text.logEventsHelp + "'>" + this.text.logEvents + "</label><br> <input id='log' value='" + log + "'> </div> </div><br> <button class='command save'>" + this.text.save + "</button>");
    return this.trigger("rendered");
  };

  return SettingsView;

})(Backbone.View);
