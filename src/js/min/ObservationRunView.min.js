var ObservationRunView,bind=function(t,e){return function(){return t.apply(e,arguments)}},extend=function(t,e){function i(){this.constructor=t}for(var s in e)hasProp.call(e,s)&&(t[s]=e[s]);return i.prototype=e.prototype,t.prototype=new i,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;ObservationRunView=function(e){function i(){return this.saveCurrentSurvey=bind(this.saveCurrentSurvey,this),this.updateObservationIndex=bind(this.updateObservationIndex,this),this.checkSurveyDisplay=bind(this.checkSurveyDisplay,this),this.checkIfOver=bind(this.checkIfOver,this),this.checkWarning=bind(this.checkWarning,this),this.checkObservationPace=bind(this.checkObservationPace,this),this.tick=bind(this.tick,this),i.__super__.constructor.apply(this,arguments)}return extend(i,e),i.prototype.className="ObservationRunView",i.prototype.events={"click .start_time":"startObservations","click .stop_time":"stopObservations","click .done":"completeObservation"},i.FORCE=1,i.prototype.initialize=function(t){return this.model=t.model,this.parent=t.parent,this.warningSeconds=5,this.initializeFlags(),this.initializeSurvey()},i.prototype.initializeSurvey=function(){var t,e,i;return null!=this.survey&&this.onClose(),t=$.extend(this.model.get("surveyAttributes"),{_id:this.model.id}),i=function(){var i,s,n;for(n=[],e=i=1,s=parseInt(this.model.get("totalSeconds")/this.model.get("intervalLength"));s>=1?s>=i:i>=s;e=s>=1?++i:--i)n.push(new Backbone.Model(t));return n}.call(this),i.unshift(""),this.skippableView=new SurveyRunView({model:i[1],parent:this,isObservation:!0}),this.survey={models:i,results:[]}},i.prototype.initializeFlags=function(){return this.iAm={counting:!1,recording:!1},this.iHavent={warned:!0},this.iHave={runOnce:!1,finished:!1},this.my={time:{start:0,elapsed:0},observation:{index:0,oldIndex:0,completed:0,total:parseInt(this.model.get("totalSeconds")/this.model.get("intervalLength"))}}},i.prototype.startObservations=function(){return this.iAm.counting||this.iHave.runOnce?void 0:(this.$el.find(".stop_button_wrapper, .next_display, .completed_display").removeClass("confirmation"),this.$el.find(".start_button_wrapper").addClass("confirmation"),this.timerInterval=setInterval(this.tick,1e3),this.iAm.counting=!0,this.my.time.start=this.getTime(),this.my.time.elapsed=0)},i.prototype.stopObservations=function(e){var i,s;return clearInterval(this.timerInterval),i=null!=e,s=null==e,null!=e&&this.trigger("showNext"),s&&!this.iHave.finished?(this.iAm.recording&&(this.resetObservationFlags(),this.saveCurrentSurvey()),this.my.observation.index++,this.renderSurvey()):(this.$el.find(".stop_button_wrapper").addClass("confirmation"),Utils.midAlert(t("observations finished"))),this.$el.find(".next_display").addClass("confirmation"),this.iHave.finished=!0,this.iHave.runOnce=!0},i.prototype.tick=function(){return this.my.time.elapsed=this.getTime()-this.my.time.start,this.checkIfOver(),this.updateObservationIndex(),this.updateProgressDisplay(),this.checkSurveyDisplay(),this.checkObservationPace(),this.checkWarning()},i.prototype.checkObservationPace=function(){return this.iAm.recording&&this.my.observation.completed<this.my.observation.index-1&&0!==this.my.observation.index?(this.iHave.forcedProgression=!0,this.resetObservationFlags(),this.saveCurrentSurvey(),this.renderSurvey()):void 0},i.prototype.checkWarning=function(){var e,i;return i=Math.floor((this.my.time.elapsed+this.warningSeconds)/this.model.get("intervalLength")),e=this.my.observation.index<i&&!this.iHave.finished,this.iAm.recording&&this.iHavent.warned&&e&&0!==this.my.observation.index?(Utils.midAlert(t("observation ending soon")),this.iHavent.warned=!1):void 0},i.prototype.gridWasAutostopped=function(){return!1},i.prototype.checkIfOver=function(){return this.my.time.elapsed>=this.model.get("totalSeconds")?this.stopObservations():void 0},i.prototype.checkSurveyDisplay=function(){return this.my.observation.oldIndex===this.my.observation.index||this.iHave.finished||this.iAm.recording?void 0:(this.renderSurvey(),this.my.observation.oldIndex=this.my.observation.index)},i.prototype.updateObservationIndex=function(){return this.my.observation.index=Math.floor(this.my.time.elapsed/this.model.get("intervalLength")),this.my.observation.index>this.survey.models.length-1?this.my.observation.index=this.survey.models.length-1:void 0},i.prototype.updateProgressDisplay=function(){var t;return this.$el.find(".current_observation").html(this.my.observation.index),this.$el.find(".completed_count").html(this.my.observation.completed),t=Math.max((this.my.observation.index+1)*this.model.get("intervalLength")-this.my.time.elapsed,0),this.$el.find(".time_till_next").html(t),this.iAm.recording||this.iHave.finished?void 0:this.$el.find(".next_display, .completed_display").removeClass("confirmation")},i.prototype.resetObservationFlags=function(){return this.iAm.recording=!1,this.iHavent.warned=!0},i.prototype.getTime=function(){return parseInt((new Date).getTime()/1e3)},i.prototype.completeObservation=function(){return this.survey.view.isValid()?(this.saveCurrentSurvey(),this.iHave.finished&&this.trigger("showNext")):this.survey.view.showErrors(),this.tick()},i.prototype.saveCurrentSurvey=function(){return this.resetObservationFlags(),this.my.observation.completed++,this.survey.results.push({observationNumber:this.survey.view.index,data:this.survey.view.getResult(),saveTime:this.my.time.elapsed}),this.survey.view.close(),this.$el.find(".done").remove()},i.prototype.render=function(){var e;return this.trigger("hideNext"),e=this.model.get("totalSeconds"),this.$el.html("<div class='timer_wrapper'> <div class='progress clearfix'> <span class='completed_display confirmation'>"+t("completed")+" <div class='info_box completed_count'>"+this.my.observation.completed+"</div></span> <span class='next_display confirmation'>"+t("next observation")+" <div class='info_box time_till_next'>"+this.model.get("intervalLength")+"</div></span> </div> <div> <div class='start_button_wrapper'><button class='start_time command'>"+t("start")+"</button></div> <div class='stop_button_wrapper confirmation'><button class='stop_time command'>"+t("abort all observations")+"</button></div> </div> </div> <div id='current_survey'></div>"),this.trigger("rendered"),this.trigger("ready")},i.prototype.renderSurvey=function(){return this.iAm.counting?(this.iAm.recording=!0,this.survey.view=new SurveyRunView({model:this.survey.models[this.my.observation.index],parent:this,isObservation:!0}),this.survey.view.index=function(t){return function(){return t.my.observation.index}}(this)(),this.survey.view.on("rendered subRendered",function(t){return function(){return t.trigger("subRendered")}}(this)),this.survey.view.render(),this.$el.find("#current_survey").html("<span class='observation_display confirmation'>"+t("observation")+" <div class='info_box current_observation'>"+this.my.observation.index+"</div></span>"),this.$el.find("#current_survey").append(this.survey.view.el),this.$el.find("#current_survey").append("<button class='command done'>"+t("done with this observation")+"</button>"),this.$el.find("#current_survey").scrollTo(250,function(e){return function(){return e.iHave.forcedProgression?(Utils.midAlert(t("please continue with the next observation")),e.iHave.forcedProgression=!1):e.iHave.finished?Utils.midAlert(t("please enter last observation")):void 0}}(this))):void 0},i.prototype.onClose=function(){var t;return null!=(t=this.survey.view)&&t.close(),this.skippableView.close()},i.prototype.getResult=function(){return{surveys:this.survey.results,variableName:this.model.get("variableName"),totalTime:this.model.get("totalTime"),intervalLength:this.model.get("intervalTime"),completedObservations:this.my.observation.completed}},i.prototype.getSum=function(){return{total:this.my.observation.completed}},i.prototype.getSkipped=function(){var t,e,i,s,n;for(n=this.skippableView.getSkipped(),s=[],t=e=1,i=this.survey.models.length-1;i>=1?i>=e:e>=i;t=i>=1?++e:--e)s.push({observationNumber:t,data:n,saveTime:"skipped"});return{surveys:s,variableName:"skipped",totalTime:"skipped",intervalLength:"skipped",completedObservations:"skipped"}},i.prototype.isValid=function(){return this.iHave.finished},i.prototype.showErrors=function(){return this.$el.find("messages").html(this.validator.getErrors().join(", "))},i.prototype.updateNavigation=function(){return Tangerine.nav.setStudent(this.$el.find("#participant_id").val())},i}(Backbone.View);