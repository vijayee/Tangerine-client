var AssessmentPrintView,bind=function(t,e){return function(){return t.apply(e,arguments)}},extend=function(t,e){function n(){this.constructor=t}for(var r in e)hasProp.call(e,r)&&(t[r]=e[r]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;AssessmentPrintView=function(t){function e(){return this.afterRender=bind(this.afterRender,this),e.__super__.constructor.apply(this,arguments)}return extend(e,t),e.prototype.className="AssessmentPrintView",e.prototype.initialize=function(t){return this.abortAssessment=!1,this.index=0,this.model=t.model,this.format=t.format,Tangerine.activity="assessment print",this.subtestViews=[],this.model.subtests.sort(),this.model.subtests.each(function(t){return function(e){var n;return n=new SubtestPrintView({model:e,parent:t,format:t.format}),n.on("rendered",function(t){return null!=t&&"function"==typeof t.afterRender?t.afterRender():void 0}),t.subtestViews.push(n)}}(this))},e.prototype.render=function(){return 0===this.model.subtests.length?this.$el.append("<h1>Oops...</h1><p>This assessment is blank. Perhaps you meant to add some subtests.</p>"):(this.$el.addClass("format-"+this.format).append('<style> @page :right { @bottom-right-corner { content: counter(page) " of " counter(pages); }} table.print-metadata td{ border: solid black 1px; } table.print-content.question-attributes{ margin: 10px; } table.print-content.question-options{ margin-bottom: 5px; } table.print-content{ border: solid black 1px; } table.print-content td{ border: solid black 1px; } .AssessmentPrintView #prototype_wrapper .print-page.content { height: auto; } </style> <div class=\'print-page '+this.format+"'> <h2>"+this.model.get("name").titleize()+"</h2> <h3> "+(this.model.has("updated")?"Last Updated: "+moment(this.model.get("updated")):"")+" </h3> <table class='marking-table'> <tr> <td style='vertical-align:middle'>Enumerator Name</td><td class='marking-area'></td> </tr> </table> </div> <hr/>"),_.each(this.subtestViews,function(t){return function(e){return e.render(),t.$el.append(e.el)}}(this))),this.trigger("rendered")},e.prototype.afterRender=function(){return _.delay(function(){return $("#navigation").hide(),$("#footer").hide()},1e3)},e}(Backbone.View);