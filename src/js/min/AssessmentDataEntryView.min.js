var AssessmentDataEntryView,bind=function(t,e){return function(){return t.apply(e,arguments)}},extend=function(t,e){function s(){this.constructor=t}for(var n in e)hasProp.call(e,n)&&(t[n]=e[n]);return s.prototype=e.prototype,t.prototype=new s,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;AssessmentDataEntryView=function(t){function e(){return this.saveResult=bind(this.saveResult,this),this.updateCurrent=bind(this.updateCurrent,this),e.__super__.constructor.apply(this,arguments)}return extend(e,t),e.prototype.events={"change #subtest_select":"updateCurrent","click .prev_subtest":"prevSubtest","click .next_subtest":"nextSubtest","click .save":"saveResult"},e.prototype.prevSubtest=function(){var t;return t=document.getElementById("subtest_select"),0!==t.selectedIndex?(t.selectedIndex=t.selectedIndex-1,this.updateCurrent()):void 0},e.prototype.nextSubtest=function(){var t;return t=document.getElementById("subtest_select"),t.selectedIndex!==$("#subtest_select option").length-1?(t.selectedIndex=t.selectedIndex+1,this.updateCurrent()):void 0},e.prototype.initialize=function(t){var e,s;this.savedOn={};for(e in t)s=t[e],this[e]=s;return this.result=new Result({assessmentId:this.assessment.id,dataEntry:!0,blank:!0}),this.views=[],this.viewsBySubtestId={}},e.prototype.render=function(){var t,e,s,n,r,i,u,o,a;for(i="<button class='prev_subtest'>&lt;</button> <select id='subtest_select'> "+function(){var e,s,n,r;for(n=this.assessment.subtests.models,r=[],t=e=0,s=n.length;s>e;t=++e)u=n[t],r.push("<option data-subtestId='"+u.id+"' "+(0===t?"selected='selected'":"")+">"+u.get("name")+"</option>");return r}.call(this).join("")+" </select> <button class='next_subtest'>&gt;</button> <br>",o="<section id='current_subtest'> "+function(){var t,e,s,n;for(s=this.assessment.subtests.models,n=[],t=0,e=s.length;e>t;t++)u=s[t],n.push("<div id='"+u.id+"' class='confirmation subtest_container'></div>");return n}.call(this).join("")+" </section>",this.$el.html("<a href='#assessments'><button class='navigation'>Back</button></a><br> <h1>"+this.assessment.escape("name")+"</h1> "+i+" <button class='command save'>Save</button> <small class='small_grey last_saved'></small> "+o),r=this.assessment.subtests.models,e=0,s=r.length;s>e;e++)u=r[e],n=u.get("prototype"),this[n+"Init"](u);return this.$subEl=this.$el.find("#current_subtest"),this.updateCurrent(),this.result.set("subtestData",function(){var t,e,s,n;for(s=this.views,n=[],t=0,e=s.length;e>t;t++)a=s[t],n.push(this.subtestDataObject(a.model));return n}.call(this)),this.result.add({name:"Assessment complete",prototype:"complete",data:{comment:"Data entry feature",end_time:(new Date).getTime()},sum:{correct:1,incorrect:0,missing:0,total:1},subtestId:"result"}),this.trigger("rendered")},e.prototype.updateCurrent=function(){return Utils.working(!0),this.saveResult({error:function(){return function(){return Utils.midAlert("Result save error"),Utils.working(!1)}}(this),success:function(t){return function(){return Utils.working(!1),t.subtestId=t.$el.find("#subtest_select option:selected").attr("data-subtestId"),t.$subEl.find(".subtest_container").hide(),t.$subEl.find("#"+t.subtestId).show(),t.subtest=t.assessment.subtests.get(t.subtestId),t.trigger("rendered"),t.savedOn[t.subtestId]=!0}}(this)})},e.prototype.saveResult=function(t){return null==t&&(t={}),null==this.subtest?t.success():(this.result.insert(this.subtestDataObject(this.subtest)),this.result.save(null,{success:function(e){return function(s){return e.$el.find(".last_saved").html("Last saved: "+moment(new Date(e.result.get("updated"))).format("MMM DD HH:mm")),"function"==typeof t.success?t.success(s):void 0}}(this),error:function(){return function(e,s){return console.log("save error"),console.log(arguments),"function"==typeof t.error?t.error(e,s):void 0}}(this)}))},e.prototype.updateCompletedResult=function(){var t;return _.keys(this.savedOn).length===this.views.length?(t={name:"Assessment complete",prototype:"complete",data:{comment:this.$el.find("#additional_comments").val()||"",end_time:(new Date).getTime()},subtestId:"result"},this.completedAlready?(this.result.insert(t),this.resultSave()):(this.result.add(t),this.completedAlready=!0)):void 0},e.prototype.subtestDataObject=function(t){var e;return e=this.viewsBySubtestId[t.id],{name:t.get("name"),data:e.getResult(),subtestHash:t.get("hash"),subtestId:t.id,prototype:t.get("prototype")}},e.prototype.gridInit=function(t){var e;return e=new GridRunView({model:t,dataEntry:!0}),this.addRenderView(e,t)},e.prototype.surveyInit=function(t){var e;return e=new SurveyRunView({model:t,dataEntry:!0,parent:{gridWasAutostopped:function(){return!1}}}),this.addRenderView(e,t)},e.prototype.locationInit=function(t){var e;return e=new LocationRunView({model:t,dataEntry:!0}),this.addRenderView(e,t)},e.prototype.datetimeInit=function(t){var e;return e=new DatetimeRunView({model:t,dataEntry:!0}),this.addRenderView(e,t)},e.prototype.idInit=function(t){var e;return e=new IdRunView({model:t,dataEntry:!0}),this.addRenderView(e,t)},e.prototype.consentInit=function(t){var e;return e=new ConsentRunView({model:t,dataEntry:!0}),this.addRenderView(e,t)},e.prototype.addRenderView=function(t,e){var s;return s=this.$el.find("#"+e.id),t.setElement(s),t.render(),this.viewsBySubtestId[e.id]=t,this.views.push(t)},e}(Backbone.View);